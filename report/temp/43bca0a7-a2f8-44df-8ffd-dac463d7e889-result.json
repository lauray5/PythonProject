{"name": "正常请求", "status": "broken", "statusDetails": {"message": "requests.exceptions.InvalidSchema: No connection adapters were found for '<http://127.0.0.1:5000>/test'", "trace": "self = <testcase.test_api.TestAPI object at 0x000001FACD3CC050>\nbase_info = {'api_name': '简单API测试', 'header': {'Content-Type': 'application/json'}, 'method': 'GET', 'url': '/test'}\ntestcase = {'case_name': '正常请求', 'request_params': {}, 'validation': {'message': 'Success', 'status_code': 200}}\n\n    @allure.story(next(c_id) + \"测试接口\")\n    @pytest.mark.parametrize('base_info,testcase', get_testcase_yaml('./data/test_data.yaml'))\n    def test_api(self, base_info, testcase):\n        allure.dynamic.title(testcase['case_name'])\n>       RequestBase().specification_yaml(base_info, testcase)\n\ntestcase\\test_api.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\apiutil.py:20: in specification_yaml\n    return self.run.run_main(\ncommon\\sendrequest.py:37: in run_main\n    response = session.request(\n.venv\\Lib\\site-packages\\requests\\sessions.py:589: in request\n    resp = self.send(prep, **send_kwargs)\n.venv\\Lib\\site-packages\\requests\\sessions.py:697: in send\n    adapter = self.get_adapter(url=request.url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <requests.sessions.Session object at 0x000001FACD36B8C0>\nurl = '<http://127.0.0.1:5000>/test'\n\n    def get_adapter(self, url):\n        \"\"\"\n        Returns the appropriate connection adapter for the given URL.\n    \n        :rtype: requests.adapters.BaseAdapter\n        \"\"\"\n        for prefix, adapter in self.adapters.items():\n            if url.lower().startswith(prefix.lower()):\n                return adapter\n    \n        # Nothing matches :-/\n>       raise InvalidSchema(f\"No connection adapters were found for {url!r}\")\nE       requests.exceptions.InvalidSchema: No connection adapters were found for '<http://127.0.0.1:5000>/test'\n\n.venv\\Lib\\site-packages\\requests\\sessions.py:792: InvalidSchema"}, "attachments": [{"name": "log", "source": "367366ed-84ed-492a-b8d9-96bdc904116a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "base_info", "value": "{'api_name': '简单API测试', 'url': '/test', 'method': 'GET', 'header': {'Content-Type': 'application/json'}}"}, {"name": "testcase", "value": "{'case_name': '正常请求', 'request_params': {}, 'validation': {'status_code': 200, 'message': 'Success'}}"}], "start": 1747898417712, "stop": 1747898417715, "uuid": "79c9d4dc-c800-4b7b-87f6-7e8248da6483", "historyId": "e9dcd294a892fd630c9eba0b01d816b9", "testCaseId": "8bb9cac68d5ab9b28876eb945562e72d", "fullName": "testcase.test_api.TestAPI#test_api", "labels": [{"name": "story", "value": "C01_测试接口"}, {"name": "feature", "value": "C01_简单API测试模块"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestAPI"}, {"name": "host", "value": "Lenovo-Rory"}, {"name": "thread", "value": "28152-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_api"}]}